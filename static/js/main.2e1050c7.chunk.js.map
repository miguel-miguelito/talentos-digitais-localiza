{"version":3,"sources":["reducers/dataReducer.js","actions/fetchAPI.js","components/Table.js","reducers/filtersReducer.js","actions/changeNameFilter.js","components/NameFilter.js","actions/changeNumericValuesFilters.js","actions/deleteNumericValuesFilters.js","components/NumericValuesFilters.js","App.js","reducers/index.js","store/index.js","index.js"],"names":["initialState","name","dataReducer","state","action","type","planets","fetchAPI","dispatch","fetch","then","response","json","data","results","acertaTexto","texto","split","map","palavra","toUpperCase","substr","join","filterDataByNumericValues","column","comparison","value","filter","item","arg1","arg2","comparaValores","Number","Table","getData","this","props","arrayColumns","newData","i","length","includes","filterDataByName","dataTable","filterData","keysPlanet","Object","keys","indexResidents","indexOf","slice","key","planet","valuesPlanet","values","valueColumn","Component","connect","filters","numericValues","objectStates","reduce","acc","current","filtersReducer","splice","id","concat","index","changeNameFilter","event","target","NameFilter","valueInput","handleChange","className","placeholder","onChange","changeNumericValuesFilters","parentNode","deleteNumericValuesFilters","verificaEntradasVazias","array","every","NumericValuesFilters","handleClick","newArrayColumns","columnsRestantes","disabled","onClick","arrayValues","addFilter","newArrayValues","addMoreAndMoreFilters","App","isLoading","rootReducer","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e1050c7.chunk.js","sourcesContent":["export const REQUEST_PLANETS = 'REQUEST_PLANETS';\nexport const RECEIVE_PLANETS = 'RECEIVE_PLANETS';\n\nconst initialState = [{ name: '' }];\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_PLANETS:\n      return state;\n    case RECEIVE_PLANETS:\n      return action.planets;\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { REQUEST_PLANETS, RECEIVE_PLANETS } from '../reducers/dataReducer';\n\nconst requestPlanets = () => ({\n  type: REQUEST_PLANETS,\n});\n\nconst receivePlanets = (planets) => ({\n  type: RECEIVE_PLANETS,\n  planets,\n});\n\nconst fetchAPI = () => (\n  (dispatch) => {\n    dispatch(requestPlanets());\n    return (\n      fetch('https://swapi.co/api/planets')\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(receivePlanets(data.results));\n        })\n    );\n  }\n);\n\nexport default fetchAPI;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchAPI from '../actions/fetchAPI';\n\nexport function acertaTexto(texto) {\n  const palavras = texto.split('_');\n  const palavrasCapitalizadas = palavras.map((palavra) => `${palavra[0].toUpperCase()}${palavra.substr(1)}`);\n  const titulo = palavrasCapitalizadas.join(' ');\n  return titulo;\n}\n\nfunction comparaValores(arg1, arg2, comparison) {\n  switch (comparison) {\n    case '>':\n      return arg1 > arg2;\n    case '<':\n      return arg1 < arg2;\n    case '===':\n      return arg1 === arg2;\n    default:\n      return false;\n  }\n}\n\nfunction filterDataByName(data, name) {\n  const newData = data.filter((item) => item.name.includes(name));\n\n  if (newData.length === 0) {\n    return [{}];\n  }\n\n  return newData;\n}\n\nfunction filterDataByNumericValues(data, column, comparison, value) {\n  if (value === '' || column === '') {\n    return data;\n  }\n\n  const newData = data.filter((item) => (\n    !(item[column] === 'unknown') && comparaValores(Number(item[column]), Number(value), comparison)),\n  );\n\n  return newData;\n}\n\nclass Table extends Component {\n  componentDidMount() {\n    const { getData } = this.props;\n    getData();\n  }\n\n  filterData() {\n    const { data, name, arrayColumns } = this.props;\n\n    let newData = data;\n    for (let i = 0; i < arrayColumns.length; i += 1) {\n      newData = filterDataByNumericValues(newData, this.props[`valueSelectedColumn${i + 1}`], this.props[`valueSelectedComparison${i + 1}`], this.props[`valueNumber${i + 1}`]);\n    }\n\n    return filterDataByName(newData, name);\n  }\n\n  render() {\n    const dataTable = this.filterData();\n    let keysPlanet = Object.keys(dataTable[0]);\n    const indexResidents = keysPlanet.indexOf('residents');\n    keysPlanet = keysPlanet.slice(0, indexResidents);\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              {keysPlanet.map((key) => <th key={key}>{acertaTexto(key)}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {dataTable.map((planet) => {\n              let valuesPlanet = Object.values(planet);\n              valuesPlanet = valuesPlanet.slice(0, indexResidents);\n              return (\n                <tr key={planet.name}>\n                  {valuesPlanet.map((valueColumn) => <td key={valueColumn}>{valueColumn}</td>)}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const data = state.data;\n  const name = state.filters[0].name;\n  const arrayColumns = state.filters.slice(1).map((item) => item.numericValues.column);\n  const objectStates = state.filters.slice(1).reduce((acc, current, i) => ({\n    ...acc,\n    [`valueSelectedColumn${i + 1}`]: current.numericValues.column,\n    [`valueSelectedComparison${i + 1}`]: current.numericValues.comparison,\n    [`valueNumber${i + 1}`]: current.numericValues.value,\n  }), {});\n\n  return { ...objectStates, data, name, arrayColumns };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getData: () => dispatch(fetchAPI()),\n});\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  name: PropTypes.string.isRequired,\n  arrayColumns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getData: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","export const CHANGE_NAME_FILTER = 'CHANGE_NAME_FILTER';\nexport const CHANGE_NUMERIC_VALUES_FILTERS = 'CHANGE_NUMERIC_VALUES_FILTERS';\nexport const DELETE_NUMERIC_VALUES_FILTERS = 'DELETE_NUMERIC_VALUES_FILTERS';\n\nconst initialState = [\n  {\n    name: '',\n  },\n  {\n    numericValues: {\n      column: '',\n      comparison: '>',\n      value: '',\n    },\n  },\n];\n\nconst filtersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_NAME_FILTER:\n      return [\n        { name: action.value },\n        ...state.slice(1),\n      ];\n\n    case CHANGE_NUMERIC_VALUES_FILTERS:\n      state.splice(\n        action.id,\n        1,\n        {\n          numericValues: {\n            ...state[action.id].numericValues,\n            [action.name]: action.value,\n          },\n        },\n      );\n      return state.concat(\n        action.id === state.length - 1 && action.id < 5\n          ? [{ numericValues: { column: '', comparison: '>', value: '' } }]\n          : [],\n      );\n\n    case DELETE_NUMERIC_VALUES_FILTERS:\n      return state.filter((item, index) => action.id !== index);\n    default:\n      return state;\n  }\n};\n\nexport default filtersReducer;\n","import { CHANGE_NAME_FILTER } from '../reducers/filtersReducer';\n\nconst changeNameFilter = (event) => {\n  const { value } = event.target;\n  return {\n    type: CHANGE_NAME_FILTER,\n    value,\n  };\n};\n\nexport default changeNameFilter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport changeNameFilter from '../actions/changeNameFilter';\n\nclass NameFilter extends Component {\n  render() {\n    const { valueInput, handleChange } = this.props;\n    return (\n      <div className=\"filter\">\n        <input\n          placeholder=\"Search by name\"\n          value={valueInput}\n          onChange={handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  valueInput: state.filters[0].name,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleChange: (event) => {\n    dispatch(changeNameFilter(event));\n  },\n});\n\nNameFilter.propTypes = {\n  valueInput: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameFilter);\n","import { CHANGE_NUMERIC_VALUES_FILTERS } from '../reducers/filtersReducer';\n\nconst changeNumericValuesFilters = (event) => {\n  const { value, name } = event.target;\n  const { id } = event.target.parentNode;\n  return {\n    type: CHANGE_NUMERIC_VALUES_FILTERS,\n    value,\n    name,\n    id: Number(id),\n  };\n};\n\nexport default changeNumericValuesFilters;\n","import { DELETE_NUMERIC_VALUES_FILTERS } from '../reducers/filtersReducer';\n\nconst deleteNumericValuesFilters = (event) => {\n  const { id } = event.target.parentNode;\n  return {\n    type: DELETE_NUMERIC_VALUES_FILTERS,\n    id: Number(id),\n  };\n};\n\nexport default deleteNumericValuesFilters;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport changeNumericValuesFilters from '../actions/changeNumericValuesFilters';\nimport deleteNumericValuesFilters from '../actions/deleteNumericValuesFilters';\nimport { acertaTexto } from './Table';\n\nfunction verificaEntradasVazias(array) {\n  return array.every((item, index) => (\n    item !== '' || index === array.length - 1\n  ));\n}\n\nclass NumericValuesFilters extends Component {\n  addFilter(i) {\n    const { arrayColumns, handleChange, handleClick } = this.props;\n\n    const newArrayColumns = arrayColumns.slice(0, i - 1);\n    const allColumns = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    const columnsRestantes = allColumns.filter((item) => !newArrayColumns.includes(item));\n\n    return (\n      <div id={i} className=\"filter\" key={i}>\n        <select name=\"column\" onChange={handleChange} value={this.props[`valueSelectedColumn${i}`]}>\n          <option value=\"\" disabled>Select column</option>\n          {columnsRestantes.map((item) => (\n            <option key={item} value={item}>{acertaTexto(item)}</option>\n          ))}\n        </select>\n        <select name=\"comparison\" onChange={handleChange} value={this.props[`valueSelectedComparison${i}`]}>\n          <option value=\">\">greater than</option>\n          <option value=\"<\">less than</option>\n          <option value=\"===\">equal to</option>\n        </select>\n        <input type=\"number\" placeholder=\"Enter a number\" name=\"value\" onChange={handleChange} value={this.props[`valueNumber${i}`]} />\n        <button type=\"button\" onClick={handleClick}>X</button>\n      </div>\n    );\n  }\n\n  addMoreAndMoreFilters() {\n    const arrayValues = this.props.arrayValues;\n    const arrayColumns = this.props.arrayColumns;\n\n    let filters;\n\n    if (verificaEntradasVazias(arrayValues) && verificaEntradasVazias(arrayColumns)) {\n      filters = (\n        <div>\n          {arrayValues.map((item, i) => this.addFilter(i + 1, item))}\n        </div>\n      );\n    } else {\n      const newArrayValues = arrayValues.slice(0, arrayValues.length - 1);\n\n      filters = (\n        <div>\n          {newArrayValues.map((item, i) => this.addFilter(i + 1))}\n        </div>\n      );\n    }\n\n    return filters;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.addMoreAndMoreFilters()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const objectStates = state.filters.slice(1).reduce((acc, current, i) => ({\n    ...acc,\n    [`valueSelectedColumn${i + 1}`]: current.numericValues.column,\n    [`valueSelectedComparison${i + 1}`]: current.numericValues.comparison,\n    [`valueNumber${i + 1}`]: current.numericValues.value,\n  }), {});\n  const arrayValues = state.filters.slice(1).map((item) => item.numericValues.value);\n  const arrayColumns = state.filters.slice(1).map((item) => item.numericValues.column);\n\n  return { ...objectStates, arrayValues, arrayColumns };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleChange: (event) => {\n    dispatch(changeNumericValuesFilters(event));\n  },\n  handleClick: (event) => {\n    dispatch(deleteNumericValuesFilters(event));\n  },\n});\n\nNumericValuesFilters.propTypes = {\n  arrayValues: PropTypes.arrayOf(PropTypes.string).isRequired,\n  arrayColumns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumericValuesFilters);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nimport Table from './components/Table';\nimport NameFilter from './components/NameFilter';\nimport NumericValuesFilters from './components/NumericValuesFilters';\n\nclass App extends Component {\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <div className=\"App\">\n        <h1>StarWars Datatable with Filters</h1>\n        {isLoading && 'Loading...'}\n        {!isLoading && <NameFilter />}\n        {!isLoading && <NumericValuesFilters />}\n        <Table />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.data.length <= 1,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport dataReducer from './dataReducer';\nimport filtersReducer from './filtersReducer';\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n  filters: filtersReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers/index';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}